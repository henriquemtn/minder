services:
  api:
    build:
      context: ./backend/minder-backend-api
      dockerfile: Dockerfile
    ports:
      - "8080:8080"
    environment:
      - SPRING_RABBITMQ_HOST=rabbitmq
      - SPRING_RABBITMQ_PORT=5672
      - SPRING_RABBITMQ_USERNAME=guest
      - SPRING_RABBITMQ_PASSWORD=guest
      - SPRING_RABBITMQ_VIRTUAL_HOST=minder
    depends_on:
      - rabbitmq

  worker:
    build:
      context: ./backend/minder-backend-worker
      dockerfile: Dockerfile
    ports:
      - "9090:9090"
    environment:
      - SPRING_RABBITMQ_HOST=rabbitmq
      - SPRING_RABBITMQ_PORT=5672
      - SPRING_RABBITMQ_USERNAME=guest
      - SPRING_RABBITMQ_PASSWORD=guest
      - SPRING_RABBITMQ_VIRTUAL_HOST=minder
    depends_on:
      - rabbitmq

  frontend:
    build:
      context: ./frontend
      dockerfile: Dockerfile
    ports:
      - "3000:3000"
    environment:
      - NEXT_PUBLIC_API_URL=http://api:8080
    depends_on:
      - api
    restart: unless-stopped

  rabbitmq:
    image: "rabbitmq:3.8.6-management"
    container_name: rabbitmq-minder
    ports:
      - 5672:5672
      - 15672:15672
    volumes:
      - rabbitmq_data:/var/lib/rabbitmq

  db:
    image: postgres:latest
    container_name: postgres-db
    restart: always
    environment:
      POSTGRES_DB: minder_db
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: password
    ports:
      - "5434:5432"
    volumes:
      - pgdata:/var/lib/postgresql/data

volumes:
  rabbitmq_data: {}
  pgdata: {}
